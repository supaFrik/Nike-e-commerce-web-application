<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="CopilotDiffPersistence">
    <option name="pendingDiffs">
      <map>
        <entry key="$PROJECT_DIR$/src/main/java/vn/devpro/javaweb32/controller/customer/ProductController.java">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/src/main/java/vn/devpro/javaweb32/controller/customer/ProductController.java" />
              <option name="originalContent" value="package vn.devpro.javaweb32.controller.customer;&#10;&#10;import org.springframework.data.domain.Sort;&#10;import org.springframework.web.bind.annotation.PathVariable;&#10;import org.springframework.web.bind.annotation.RequestMapping;&#10;import vn.devpro.javaweb32.dto.customer.ProductDetailDto;&#10;import vn.devpro.javaweb32.entity.product.Product;&#10;import org.springframework.beans.factory.annotation.Autowired;&#10;import org.springframework.stereotype.Controller;&#10;import org.springframework.ui.Model;&#10;import org.springframework.web.bind.annotation.GetMapping;&#10;import org.springframework.web.bind.annotation.RequestParam;&#10;import vn.devpro.javaweb32.repository.ProductRepository;&#10;import vn.devpro.javaweb32.service.ProductService;&#10;import vn.devpro.javaweb32.service.ProductSort;&#10;&#10;import java.util.List;&#10;&#10;@Controller&#10;public class ProductController {&#10;    @Autowired&#10;    private ProductRepository productRepository;&#10;&#10;    @Autowired&#10;    private ProductSort productSort;&#10;&#10;    @Autowired&#10;    private ProductService productService;&#10;&#10;    @GetMapping(&quot;/products&quot;)&#10;    public String productList(&#10;            @RequestParam(required = false) String category,&#10;            @RequestParam(required = false, defaultValue = &quot;featured&quot;) String sort,&#10;             Model model) {&#10;&#10;        List&lt;Product&gt; products;&#10;        Sort sortOrder = productSort.sortedProducts(sort);&#10;        if(category != null &amp;&amp; !category.isEmpty()) {&#10;            products = productRepository.findByCategory_NameIgnoreCase(category, sortOrder);&#10;        } else {&#10;            products = productRepository.findAll(sortOrder);&#10;        }&#10;&#10;        model.addAttribute(&quot;products&quot;, products);&#10;        model.addAttribute(&quot;selectedCategory&quot;, category);&#10;        model.addAttribute(&quot;totalProducts&quot;,  productRepository.count());&#10;&#10;        return &quot;customer/product-list&quot;;&#10;    }&#10;&#10;    @GetMapping(&quot;/products/{id}&quot;)&#10;    public String productDetail(@PathVariable Long id, Model model) {&#10;        ProductDetailDto product = productService.getDetail(id);&#10;        model.addAttribute(&quot;product&quot;, product);&#10;        return &quot;customer/product-detail&quot;;&#10;    }&#10;&#10;    @GetMapping(&quot;/product-detail&quot;)&#10;    public String productDetailById(@RequestParam(&quot;id&quot;) Long id, Model model) {&#10;        ProductDetailDto product = productService.getDetail(id);&#10;        model.addAttribute(&quot;product&quot;, product);&#10;        return &quot;customer/product-detail&quot;;&#10;    }&#10;}&#10;" />
              <option name="updatedContent" value="package vn.devpro.javaweb32.controller.customer;&#10;&#10;import org.springframework.data.domain.Sort;&#10;import org.springframework.web.bind.annotation.PathVariable;&#10;import org.springframework.web.bind.annotation.RequestMapping;&#10;import vn.devpro.javaweb32.dto.customer.ProductDetailDto;&#10;import vn.devpro.javaweb32.entity.product.Product;&#10;import org.springframework.beans.factory.annotation.Autowired;&#10;import org.springframework.stereotype.Controller;&#10;import org.springframework.ui.Model;&#10;import org.springframework.web.bind.annotation.GetMapping;&#10;import org.springframework.web.bind.annotation.RequestParam;&#10;import vn.devpro.javaweb32.repository.ProductRepository;&#10;import vn.devpro.javaweb32.service.ProductService;&#10;import vn.devpro.javaweb32.service.ProductSort;&#10;&#10;import java.util.List;&#10;&#10;@Controller&#10;public class ProductController {&#10;    @Autowired&#10;    private ProductRepository productRepository;&#10;&#10;    @Autowired&#10;    private ProductSort productSort;&#10;&#10;    @Autowired&#10;    private ProductService productService;&#10;&#10;    @GetMapping(&quot;/products&quot;)&#10;    public String productList(&#10;            @RequestParam(required = false) String category,&#10;            @RequestParam(required = false, defaultValue = &quot;featured&quot;) String sort,&#10;             Model model) {&#10;&#10;        List&lt;Product&gt; products;&#10;        Sort sortOrder = productSort.sortedProducts(sort);&#10;        if(category != null &amp;&amp; !category.isEmpty()) {&#10;            products = productRepository.findByCategory_NameIgnoreCase(category, sortOrder);&#10;        } else {&#10;            products = productRepository.findAll(sortOrder);&#10;        }&#10;&#10;        model.addAttribute(&quot;products&quot;, products);&#10;        model.addAttribute(&quot;selectedCategory&quot;, category);&#10;        model.addAttribute(&quot;totalProducts&quot;,  productRepository.count());&#10;&#10;        return &quot;customer/product-list&quot;;&#10;    }&#10;&#10;    @GetMapping(&quot;/products/{id}&quot;)&#10;    public String productDetail(@PathVariable Long id, Model model) {&#10;        ProductDetailDto product = productService.getDetail(id);&#10;        model.addAttribute(&quot;product&quot;, product);&#10;        return &quot;customer/product-detail&quot;;&#10;    }&#10;&#10;    @GetMapping(&quot;/product-detail&quot;)&#10;    public String productDetailById(@RequestParam(&quot;id&quot;) Long id, Model model) {&#10;        ProductDetailDto product = productService.getDetail(id);&#10;        model.addAttribute(&quot;product&quot;, product);&#10;        return &quot;customer/product-detail&quot;;&#10;    }&#10;}" />
            </PendingDiffInfo>
          </value>
        </entry>
      </map>
    </option>
  </component>
</project>